CREATE OR REPLACE FUNCTION PSICOLOGO_INICIARSESION(varchar(80), varchar(50)) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PSICOLOGO WHERE EMAIL = $1 AND CLAVE = $2) = 0) THEN

		RESULT := 204;
  	
  	ELSE
	
		RESULT := 200;

	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PSICOLOGO_REGISTRAR(integer, varchar(80), varchar(50), varchar(50), varchar(50), varchar(50), varchar(50), varchar(20), date) RETURNS integer AS $$
DECLARE
 RESULT integer;
 FK_LUGAR integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PSICOLOGO WHERE CEDULA = $1) = 0) THEN

		INSERT INTO PSICOLOGO (CEDULA, EMAIL, CLAVE, PRIMERNOMBRE, SEGUNDONOMBRE, PRIMERAPELLIDO, SEGUNDOAPELLIDO, NUMEROMATRICULA, FECHANACIMIENTO) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9);
		
		RESULT := 201;
  	
  	ELSE
	
		RESULT := 500;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PSICOLOGO_MODIFICAR_DATOS(id integer, mail varchar(80), name varchar(50), secondname varchar(50), surname varchar(50), secondsurname varchar(50), registrationnumber varchar(20), birthdate date) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PSICOLOGO WHERE CEDULA = id) = 1) THEN

		UPDATE PSICOLOGO SET EMAIL = mail, PRIMERNOMBRE = name, SEGUNDONOMBRE = secondname, PRIMERAPELLIDO = surname, SEGUNDOAPELLIDO = secondsurname, NUMEROMATRICULA = registrationnumber, FECHANACIMIENTO = birthdate WHERE CEDULA = id;
		
		RESULT := 201;
  	
  	ELSE
	
		RESULT := 204;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PSICOLOGO_MODIFICAR_CLAVE(id integer, pass varchar(50)) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PSICOLOGO WHERE CEDULA = id) = 1) THEN

		UPDATE PSICOLOGO SET CLAVE = pass WHERE CEDULA = id;
		
		RESULT := 201;
  	
  	ELSE
	
		RESULT := 204;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PSICOLOGO_CONSULTAR(ci integer) RETURNS TABLE(CEDULA integer, EMAIL varchar(80), CLAVE varchar(50), PRIMERNOMBRE varchar(50), SEGUNDONOMBRE varchar(50), PRIMERAPELLIDO varchar(50), SEGUNDOAPELLIDO varchar(50), NUMEROMATRICULA varchar(20), FECHAINGRESO date) AS $$
DECLARE

BEGIN
	RETURN QUERY
	SELECT PSI.CEDULA, PSI.EMAIL, PSI.CLAVE, PSI.PRIMERNOMBRE, PSI.SEGUNDONOMBRE, PSI.PRIMERAPELLIDO, PSI.SEGUNDOAPELLIDO, PSI.NUMEROMATRICULA, PSI.FECHANACIMIENTO
	FROM PSICOLOGO PSI
	WHERE PSI.CEDULA = ci 		
	 ;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PACIENTE_REGISTRAR(integer, varchar(50), varchar(50), integer, varchar(35), integer) RETURNS integer AS $$
DECLARE
 RESULT integer;
 FK_LUGAR integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PACIENTE WHERE CI = $1) = 0) THEN

		INSERT INTO PACIENTE (CI, PRIMERNOMBRE, PRIMERAPELLIDO, EDAD, CARRERA, FK_LUGAR) VALUES ($1, $2, $3, $4, $5, $6);

		RESULT := 201;
  	
  	ELSE
	
		RESULT := 500;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PACIENTE_MODIFICAR(integer, varchar(50), varchar(50), integer, varchar(35), integer) RETURNS integer AS $$
DECLARE
 RESULT integer;
 FK_LUGAR integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PACIENTE WHERE CI = $1) = 0) THEN

		UPDATE PACIENTE SET PRIMERNOMBRE = $2, PRIMERAPELLIDO = $3, EDAD = $4, CARRERA = $5, FK_LUGAR= $6 WHERE CI = $1;
		
		RESULT := 201;
  	
  	ELSE
	
		RESULT := 204;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PACIENTE_CONSULTAR(integer) RETURNS TABLE(CI integer, PRIMERNOMBRE varchar(50), PRIMERAPELLIDO varchar(50), EDAD integer, CARRERA varchar(35), FK_LUGAR integer) AS $$
DECLARE

BEGIN
	RETURN QUERY
	SELECT PAC.CI, PAC.PRIMERNOMBRE, PAC.PRIMERAPELLIDO, PAC.EDAD, PAC.CARRERA, PAC.FK_LUGAR
	FROM PACIENTE PAC
	WHERE PAC.CI = $1		
	 ;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION PACIENTE_ELIMINAR(integer) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM PACIENTE WHERE CI = $1) = 1) THEN 

		DELETE FROM PACIENTE WHERE CI = $1;
		
		RESULT := 200;

	ELSE

		RESULT := 204;

	END IF;
	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION DIAGNOSTICO_REGISTRAR(date, varchar(120), varchar(200), integer, integer) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN

	INSERT INTO DIAGNOSTICO (FECHA, RESPUESTA, RESPUESTARED, FK_PACIENTE, FK_PSICOLOGO) VALUES ($1, $2, $3);
	RESULT := 201;
	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION DIAGNOSTICO_CONSULTAR(integer, integer) RETURNS TABLE(CODIGO integer, FECHA date, RESPUESTA varchar(120), RESPUESTARED varchar(200), FK_PACIENTE integer, FK_PSICOLOGO integer) AS $$
DECLARE

BEGIN
	 RETURN QUERY
	 SELECT D.CODIGO, D.FECHA, D.RESPUESTA, D.RESPUESTARED, D.FK_PACIENTE, D.FK_PSICOLOGO
	 FROM DIAGNOSTICO D 
	 WHERE D.FK_PACIENTE = $1 AND D.FK_PSICOLOGO = $2;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION DIAGNOSTICO_CONSULTAR_DETALLE(integer) RETURNS TABLE(CODIGO integer, FECHA date, RESPUESTA varchar(120), RESPUESTARED varchar(200), FK_PACIENTE integer, FK_PSICOLOGO integer) AS $$
DECLARE

BEGIN
	 RETURN QUERY
	 SELECT D.CODIGO, D.FECHA, D.RESPUESTA, D.RESPUESTARED, D.FK_PACIENTE, D.FK_PSICOLOGO
	 FROM DIAGNOSTICO D 
	 WHERE D.CODIGO = $1;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION DIAGNOSTICO_BORRAR(integer) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM DIAGNOSTICO WHERE CODIGO = $1) = 1) THEN 

		DELETE FROM DIAGNOSTICO WHERE CODIGO = $1;
		
		RESULT := 200;

	ELSE

		RESULT := 204;

	END IF;
	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CITA_REGISTRAR(date, time, varchar(200), integer, integer, integer) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN

	INSERT INTO CITA (FECHA, HORA, MOTIVO, FK_PACIENTE, FK_PSICOLOGO, FK_EXAMENMENTAL) VALUES ($1, $2, $3);
	RESULT := 201;
	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CITA_MODIFICAR(integer, date, time, varchar(200)) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM CITA WHERE CODIGO = $1) = 1) THEN
		UPDATE CITA SET FECHA = $2, HORA = $3, MOTIVO = $4 WHERE (CODIGO = $1);
		
		RESULT := 201;
  	
  	ELSE
	
		RESULT := 204;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CITA_ELIMINAR(integer, date, time, varchar(200)) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT COUNT(*) FROM CITA WHERE CODIGO = $1) = 1) THEN
		DELETE FROM CITA WHERE (CODIGO = $1);
		
		RESULT := 200;
  	
  	ELSE
	
		RESULT := 204;
	
	END IF;
 	RETURN RESULT;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CITA_CONSULTAR(integer, integer) RETURNS TABLE(CODIGO integer, FECHA date, HORA time, MOTIVO varchar(200), FK_PACIENTE integer, FK_PSICOLOGO integer, FK_EXAMENMENTAL integer) AS $$
DECLARE

BEGIN
	 RETURN QUERY
	 SELECT C.CODIGO, C.FECHA, C.HORA, C.MOTIVO, C.FK_PACIENTE, C.FK_PSICOLOGO, C.FK_EXAMENMENTAL 
	 FROM CITA C
	 WHERE C.FK_PACIENTE = $1 AND C.FK_PSICOLOGO = $2;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION DIAGNOSTICO_CONSULTAR_DETALLE(integer) RETURNS TABLE(CODIGO integer, FECHA date, RESPUESTA varchar(120), RESPUESTARED varchar(200), FK_PACIENTE integer, FK_PSICOLOGO integer) AS $$
DECLARE

BEGIN
	 RETURN QUERY
	 SELECT C.CODIGO, C.FECHA, C.HORA, C.MOTIVO, C.FK_PACIENTE, C.FK_PSICOLOGO
	 FROM CITA C 
	 WHERE C.CODIGO = $1;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION EXAMENMENTAL_REGISTRAR(integer, varchar(300), varchar(200), varchar(200), varchar(200), varchar(200), varchar(200), varchar(300)) RETURNS integer AS $$
DECLARE
 RESULT integer;

BEGIN
	IF ((SELECT FK_EXAMENMENTAL FROM CITA WHERE CODIGO = $1) IS NULL) THEN

		INSERT INTO EXAMENMENTAL (COMPORTAMIENTO, ACTITUD, ATENCION, CONCIENCIA, ESTADOANIMO, LENGUAJE, PENSAMIENTO) VALUES ($2, $3, $4, $5, $6, $7, $8);

		RESULT := 201;
  	
  	ELSE
	
		RESULT := 500;
	
	END IF;
 	RETURN RESULT;
 END;

 $$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION EXAMENMENTAL_CONSULTAR(integer) RETURNS TABLE(CODIGO integer, COMPORTAMIENTO varchar(300), ACTITUD varchar(200), ATENCION varchar(200), CONCIENCIA varchar(200), ESTADOANIMO varchar(200), LENGUAJE varchar(200), PENSAMIENTO varchar(300)) AS $$
DECLARE

BEGIN
	 RETURN QUERY
	 SELECT EM.CODIGO, EM.COMPORTAMIENTO, EM.ACTITUD, EM.ATENCION, EM.CONCIENCIA, EM.ESTADOANIMO, EM.LENGUAJE, EM.PENSAMIENTO
	 FROM EXAMENMENTAL EM, CITA C
	 WHERE EM.FK_PSICOLOGO = $1 AND C.FK_EXAMENMENTAL = EM.CODIGO;
END;
$$ LANGUAGE plpgsql;